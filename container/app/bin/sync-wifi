#!/bin/bash

if [[ $UID != 0 ]]; then
    echo "Please run this script with sudo:"
    echo "sudo $0 $*"
    exit 1
fi

LANTERN_SSID="LANTERN"
LOGFILE="logs/pollinate.log"



#-----------------------------------------------------------------------------
##
# Start Sync for All Nearby Lanterns
# @todo don't shut down wlan0 before scanning
# @todo iterate through nearby lanterns twice to make sure all are in sync
# @todo pick the strongest LANTERN_INTERNET nearby and sync to that first, to get latest before pollinating
##
start() {
  
  list=`macs`

  if [[ $list == "" ]]; then
    echo "no nearby Lanterns to sync with..."
    exit
  fi

  # iterate through lanterns by mac address
  echo -e $list | while read mac_addr ; do
   echo === $mac_addr ===
  done
  
  echo "taking access point offline for sync..."

  echo "----------------- Pollinate Start ------------------" >> $LOGFILE 2>&1
  macs | while read mac_addr ; do
    register $mac_addr
    sync $mac_addr multi
  done
  systemctl start ap
  echo "----------------- Pollinate Stop ------------------" >> $LOGFILE 2>&1
}


register() {
  mac_addr=$1

  if [ -z "$mac_addr" ]; then
    echo "please provide MAC Address for SSID ${LANTERN_SSID}"
    exit
  fi

  path="/etc/netctl/pollinate"

  if [[ -f $path ]]; then
    echo "device already registered"
  else
    touch $path
    cat <<EOF >"$path"
Description="Lantern - Pollinate Mode"
Interface=wlan0
Connection=wireless
Security=none
ESSID="${LANTERN_SSID}"
IP=dhcp
AP=${mac_addr}
EOF
    echo "$path:"
    cat $path
    netctl enable pollinate
    touch /opt/lantern/logs/pollinate.log
  fi
}

##
# Start sync with pre-defined Lantern from register()
##
sync() {

  mac_addr=$1
  do_multi=$2

  echo "Going offline to sync ${mac_addr}..."

  echo "========== Sync ${mac_addr} ==========" >> $LOGFILE 2>&1

  # stop any existing usage for wlan0 interface
  systemctl stop ap
  sleep 5

  # connect to wireless network
  netctl start pollinate >> $LOGFILE 2>&1
  sleep 5

  # check network
  ip neigh >> $LOGFILE 2>&1

  # get database status before sync
  curl http://lantern.local/db/lantern/ >> $LOGFILE 2>&1

  # do the sync
  /opt/lantern/bin/sync-lantern >> $LOGFILE 2>&1

  # get database status after sync
  curl http://lantern.local/db/lantern/ >> $LOGFILE 2>&1

  # disconnect
  netctl stop pollinate >> $LOGFILE 2>&1

  # if we're running this command stand-alone, bring back access point afterwards
  if [[ -z "$do_multi" ]]; then
      systemctl start ap
  fi

  echo "========== Stop ${mac_addr} ==========" >> $LOGFILE 2>&1

}

###
# Discover MAC addresses of nearby wireless devices for airing
# @todo allow for custom SSID values
###
macs() {
  ssid=${1:-$LANTERN_SSID}
  iw wlan0 scan | grep "wlan0\|SSID:\|signal" | paste - - - | grep "^BSS" | grep -v associated | sort -u -k3 | grep $ssid | cut -c 5-21
}


###
# Help Display
###
help() {
  echo "Please choose between commands: start, register, sync, macs"
}


#-----------------------------------------------------------------------------
until
    cmd=$1
    if [ -z "$cmd" ]; then
        help
    fi
    shift 1
    $cmd "$@"
    [ "$?" -ne 127 ]
do
    help
    exit
done
